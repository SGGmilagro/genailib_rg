[project]
name = "genailib_rg"
version = "0.1.0"
description = "A library to interact with OpenAI's API for generating chat responses."
authors = [{ name = "Your Name", email = "your.email@example.com" }]
requires-python = ">=3.10"
dependencies = ["openai", "click", "pydantic", "python-dotenv"]

[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"


[tool.setuptools]
packages = ["genailib_rg"]
package-dir = { "" = "." } # Adjust based on actual directory structure
# Adjust the directory if your package code is in a different location

[project.scripts]
genailib = "genailib_rg.console:main" # Ensure you have a main function in a console.py within genailib_rg package

[project.optional-dependencies]
test = ["pytest", "coverage"]
docs = ["sphinx"]

[tool.pyright]
venvPath = "."
venv = ".pixi/envs/test"

[tool.ruff.lint]
select = ["E", "W", "F", "C", "B", "I", "S", "ANN"]
ignore = [
    "E203",   # White space before ':'
    "ANN401", # Missing type annotation for self in method
]
mccabe.max-complexity = 10

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true
ignore-fully-untyped = true

[tool.mypy]
warn_return_any = true
warn_unused_configs = true

[[tool.mypy.overrides]]
module = ["openai", "pytest"]
ignore_missing_imports = true
